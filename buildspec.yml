version: 0.2

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

env:
  parameter-store:
    NPM_TOKEN: "/sauerkraut/npm/token"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

phases:
  install:
    commands:
      - echo "install dependancies..."
      - npm install
    finally:
      - echo "...installed dependancies"

  pre_build:
    commands:
      - echo "node version"
      - node --version

      - echo "npm version"
      - npm --version

      - echo "npm token"
      - echo "$NPM_TOKEN"

      - VERSION=$(node -p "require('./package.json').version")
      - echo "package version"
      - echo "$VERSION"

      - echo "create .npmrc file..."
      # Note: Must reference the file system root ~/.npmrc and not the copy
      # associated to the project
      - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - echo "...createed .npmrc file"
      - cat ~/.npmrc

  build:
    commands:
      - echo "create package..."
      - npm run build
      - npm pack

      # The "convoluted" name of the package created from `npm pack`.
      # Example: devon-church-sauerkraut-1.0.0.tgz
      #        : <scope>-<name>-<version>.tgz
      - PACKAGE="devon-church-sauerkraut-$VERSION.tgz"

    finally:
      - echo "...created package"

  post_build:
    commands:
      # - echo "publish to npm..."
      # - npm publish --access="public"

      # - echo "publish to s3..."
      # - aws s3 cp ./$PACKAGE s3://sauerkraut/$VERSION.tgz --acl="public-read" --storage-class="REDUCED_REDUNDANCY"

      - git --version
      - git --help
      - git branch
      - git remote -v
      - git fetch
      - git branch -a

      - mkdir release
      - cp package.json release/package.json
      - cp package.js release/package.js
      - cp -rf dist release/dist
      - git checkout .
      - git checkout release
      - cp -rf release/* ./
      - git add .
      - git commit -m "add release $VERSION assets"
      - git tag -a v$VERSION -m "create v$VERSION release"
      - git push origin release --tags

      - echo "publish to github..."
    finally:
      # - echo "...published to npm"
      # - echo "...published to s3"
      # - echo "...published to github"

# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #

cache:
  paths:
    - "node_modules/**/*"
